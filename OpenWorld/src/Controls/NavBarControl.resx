<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HomeButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JCXlHzz465EWmhQ6AAAAAElFTkSuQmCC
</value>
  </data>
</root>